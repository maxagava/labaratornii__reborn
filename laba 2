#include <iostream>
using namespace std;
class Complex
{
	private:
		float rl;
		float img;
	public:
	Complex() : rl(0.0), img(0.0)
	{}

	Complex(float real, float imag) : rl(real), img(imag)
	{}
	void get();
	void print();
	Complex sum(Complex c2) const;
	Complex razn(Complex c2) const;
	Complex mult(int mpl) const;
	Complex div(int div) const;
};
	void Complex::get()
{
	cout << "Write the real part of a complex number : " << endl;
	cin >> rl;
	cout << "Write the imaginary part :" << endl;
	cin >> img;
	cout << endl;
}
	void Complex::print()
{
	if (img < 0)
	{
		cout << rl << img << "i" << endl;
	}
	else
		cout << rl << "+" << img << "i" << endl;
}
	Complex Complex::sum(Complex c2) const
{
	return Complex(rl + c2.rl, img + c2.img);
}
	Complex Complex::razn(Complex c2) const
{
	return Complex(rl - c2.rl, img - c2.img);
}
	Complex Complex::mult(int mpl) const
{
	return Complex(rl*mpl, img*mpl);
}
	Complex Complex::div(int div) const
{
	return Complex(rl / div, img / div);
}
	int main()
{
	Complex a, b, result;
	int mpl, div;
	a.get();
	b.get();
	result = a.sum(b);
	cout << "Result (add): "; result.print();
	result = a.razn(b);
	cout << "Result (sub): "; result.print();
	cout << "\n Write number for multiply: " << endl;
	cin >> mpl;
	result = a.mult(mpl);
	cout << "Result (multiply): ";	result.print();
	cout << "\n Write number fot div: " << endl;
	cin >> div;
	result = a.div(div);
	cout << "Result (div): ";  result.print();
	system("pause");
	return 0;
}
