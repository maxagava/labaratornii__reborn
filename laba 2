#include <iostream>

using namespace std;

class Complex {
private:
	float x1;
	float x2;
public:
	Complex() : x1(0.0f), x2(0.0f)
	{}

	Complex(float rl, float img) : x1(rl), x2(img)
	{}

	void getComplex()
	{
		cout << "Write real part of complex number:" << endl;
		cin >> x1;
		cout << "Write imaginary part of complex number:" << endl;
		cin >> x2;
		cout << endl;
	}

	Complex add(Complex other) const
	{
		return Complex(x1 + x1, x2 + x2);
	}

	void subComplex(Complex other) const
	{
	return 	Complex(x1-x)
	}

	void multiplyComplex(Complex c1, Complex c3, int mpl)
	{
		
	}

	void divComplex(Complex c1, Complex c3, int div)
	{
		
	}
};

int main()
{
	Complex c1, c2, c3;
	int multi, div;
	c1.getComplex();
	c2.getComplex();
	c3.addComplex(c1, c2, c3);
	c3.subComplex(c1, c2, c3);
	cout << "\n Write number for multiplication:" << endl;
	cin >> multi;
	c3.multiplyComplex(c1, c3, multi);
	cout << "\n Write number for dividing:" << endl;
	cin >> div;
	c3.divComplex(c1, c3, div);
	system("pause");
	return 0;
}
