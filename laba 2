#include <iostream>

using namespace std;

class Complex {
private:
	float x1;
	float x2;
public:
	Complex() : x1(0), x2(0)
	{}

	Complex(float rl, float img) : x1(rl), x2(img)
	{}

	void getComplex()
	{
		cout << "Write real part of complex number:" << endl;
		cin >> x1;
		cout << "Write imaginary part of complex number:" << endl;
		cin >> x2;
		cout << endl;
	}

	void addComplex(Complex c1, Complex c2, Complex c3)
	{
		c3.x1= c1.x1 + c2.x1;
		c3.x2= c1.x2+ c2.x2;
		cout << "Result (summ):\t" << c3.x1<< "+" << c3.x2 << "i" << endl;
	}

	void subComplex(Complex c1, Complex c2, Complex c3)
	{
		c3.x1 = c1.x1 - c2.x1;
		c3.x2 = c1.x2 - c2.x2;
		if (c1.x2 > c2.x2)
		{
			cout << "Result (summ):\t" << c3.x1 << "+" << c3.x2 << "i" << endl;
		}
		else cout << "Result (razn):\t" << c3.x1 << c3.x2 << "i" << endl;
	}

	void multiplyComplex(Complex c1, Complex c3, int mpl)
	{
		c3.x1 = c1.x1*mpl;
		c3.x2 = c1.x2*mpl;
		cout << "Result (umnoj):\t" << c3.x1 << "+" << c3.x2 << "i" << endl;
	}

	void divComplex(Complex c1, Complex c3, int div)
	{
		c3.x1 = c1.x1 / div;
		c3.x2 = c1.x2 / div;
		cout << "Result (delenie):\t" << c3.x1 << "+" << c3.x2 << "i" << endl;
	}
};

int main()
{
	Complex c1, c2, c3;
	int multi, div;
	c1.getComplex();
	c2.getComplex();
	c3.addComplex(c1, c2, c3);
	c3.subComplex(c1, c2, c3);
	cout << "\n Write number for multiplication:" << endl;
	cin >> multi;
	c3.multiplyComplex(c1, c3, multi);
	cout << "\n Write number for dividing:" << endl;
	cin >> div;
	c3.divComplex(c1, c3, div);
	system("pause");
	return 0;
}
